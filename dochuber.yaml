# Конфигурация AI-ассистента Dochuber
dochuber: 
  contexts:         # Конфигурации контекстов
    global:         
      # Генераторы глобального контекта. Информация будет добавляться во все запросы к AI-агенту.
      # Пример генерации правила
      dochub.rules.techstack:
        # Тип генератора указываем явно 
        type: dataset
        # Декларируем правило использования техстека
        source: > 
          (
            "# Стандарт использования технологического стека\n"
            & "При описании архитектурных компонентов (components) требуется использовать следующий технологический стек: "
            & ($distinct(components.*.technologies)~>$join(' ;')) & ". "
            & "Этот технологический стек актуален для всего репозитория.\n"
            & "Если в архитектурном компоненте будет обнаружена технология не входящая в этот список, требуется об этом сообщить пользователю.\n"
            & "Технологический стек определен стандартом №1."
          )
  knowledge:        # Декларирование знаний доступных агенту
    dochub.integrations.weather:  # Пример нетипичных знаний - Погода в России
        # Тип генератора указываем явно
        type: resource
        # Краткое описание знания
        description: Информация о погоде в России
        # Ссылка на внешний ресурс, который в формате RSS возвращает информацию о погоде
        # Используем сервис allorigins.win для решения проблемы CORS
        source: https://api.allorigins.win/raw?url=http://news.hmn.ru/news_out/xml/news_rss.xml  
    dochub.statistic.docs:
      type: dataset         # Тип генератора. По умолчанию dataset
      description: Информация о количестве документов в Data Lake
      source: >             # Генерируем информацию с использование JSONata о количестве документов в репозитории
        (
          "Всего документов в текущем репозитории: " & $count(docs.*) & "шт"
        )
    # Документация по Dochuber
    dochub.dochuber:
      description: >
        Информация о работе AI-ассистента Dochuber. Если пользователь просит помочь с 
        настройкой Dochuber или запрашивает документацию по нему, используй этот
        модуль знания.
      type: generator
      source: >
        (
          docs~>$dochuberFetchDocs("^dochub\\.dochuber(\\..*)*");
        )
        
# Вспомогательные функции для работы Dochuber
functions: 
  dochuberFetchDocs:
    title: Генерирует ресурсные ссылки на документы по указанному шаблону ID для Dochuber
    params: 
      - alias: docs
        type: object
        title: Коллекция документов
      - alias: pattern
        title: Шаблон отбора документов
    result: 
      type: array
      title: Массив ресурсных ссылок для Dochuber
      items:
        type: object
        properties:
          type: 
            title: Тип всегда равен "resource"
            type: string
            enum: [resource]
          source:
            title: Содержимое документа
            type: string
    code: >
      (
        /* Выбираем нужные документы по шаблону */
        $regexp := $eval("/" & pattern & "/");
        [docs.$keys()[$match($, $regexp)].(
          /* Получаем документ из Data Lake */
          $doc := $lookup($$.docs, $);
          /* Формируем ссылку на ресурс */
          {
            "type": "resource",
            "description": $doc.description,
            "title":  $doc.title,
            "$base": "/docs/" & $ & "/source",
            "source": $doc.source
          }
        )]
      )
        