docs:
  # *************************************
  #               DSL DocHub
  # *************************************
  dochub.dsl:
    type: markdown
    source: dsl.md
    location: /DocHub/DSL
    description: Описание предметно-ориентированного языка DocHub (DSL) для использования в подходе "Архитектура как код"
    title: DSL
    icon: mdi-account-group-outline
  #**************************************
  #             $base
  #**************************************
  dochub.dsl.base:
    location: /DocHub/DSL/$base
    title: $base
    description: Базовая точка монтирования
    type: markdown
    source: base.md
    icon: mdi-vector-point
  #**************************************
  #             $constructor
  #**************************************
  dochub.dsl.constructor:
    location: /DocHub/DSL/$constructor
    title: $constructor
    description: Конструктор презентаций
    type: markdown
    source: constructor.md
    icon: mdi-cog-outline
  #**************************************
  #             $prototype
  #**************************************
  dochub.dsl.prototype:
    location: /DocHub/DSL/$prototype
    title: $prototype
    description: Наследование объектов
    type: markdown
    source: prototype.md
    icon: mdi-cogs
  dochub.dsl.prototype.examples.proto:
    # Базовое описание таблицы интеграций
    type: table
    headers:
      - value: from
        text: Система 1
        sortable: true
        align: left
        width: 20%
        link: link-from       
      - value: to
        text: Система 2
        sortable: true
        align: left
        width: 20%
        link: link-to
      - value: direction
        text: Связь
        sortable: true
        align: center
        width: 5%
      - value: title
        text: Описание
        sortable: true
        align: left
  dochub.dsl.prototype.examples.child: # Дочерняя таблица
    # Родительская таблица. Наследуется вся мета-конфигурация
    $prototype: dochub.dsl.prototype.examples.proto   
    # Данные определяются
    source: >                          # Отбирает только компоненты VUEX
        (
            /* Анализируем все связи компонент и сводим в таблицу */
            components.$spread().(
              $from := $keys()[0];
              *.links.{
                "from": $from,
                "link-from": "@component/" & $from,
                "to": id,
                "link-to": "@component/" & id,
                "direction": direction,
                "title": title
              }
            )
        )    
  #**************************************
  #               datasets
  #**************************************
  dochub.dsl.datasets:
    location: /DocHub/DSL/datasets
    title: datasets
    description: Источники данных
    type: markdown	    
    source: datasets.md
    icon: mdi-database
  dochub.dsl.datasets.examples.preset:
    # Для отображения в меню необходимо раскомментировать
    # location: /DocHub/DSL/datasets/preset
    title: Предопределенные источники данных
    description: Пример предопределенных (константных) источников данных 
    type: table
    headers:
      # Заголовки таблицы
      - value: id           # Идентификатор поля для вывода в колонке
        text: Идентификатор # Заголовок колокнки
        width: 20%          # Ширина колонки 
      - value: title
        text: Название
    source: dochub.dsl.datasets.example.preset
  dochub.dsl.datasets.examples.query:
    # Для отображения в меню необходимо раскомментировать
    # location: /DocHub/DSL/datasets/query
    title: Предопределенные источники данных
    description: Пример предопределенных (константных) источников данных 
    type: table
    headers:
      # Заголовки таблицы
      - value: id           # Идентификатор поля для вывода в колонке
        text: Идентификатор # Заголовок колокнки
      - value: title
        text: Название
        link: link          # Ссылка
    source: dochub.dsl.datasets.example.query
  dochub.dsl.datasets.examples.dependence:
    # Для отображения в меню необходимо раскомментировать
    # location: /DocHub/DSL/datasets/dependence
    title: Зависимые источники данных
    description: Пример использования зависимости источников данных 
    type: table
    headers:
      # Заголовки таблицы
      - value: id           # Идентификатор поля для вывода в колонке
        text: Идентификатор # Заголовок колокнки
      - value: title
        text: Название
        link: link          # Ссылка
    source: dochub.dsl.datasets.example.dependence
  #**************************************
  #               imports
  #**************************************
  dochub.dsl.imports:
    location: /DocHub/DSL/imports
    title: imports
    description: Импорт манифестов
    type: markdown
    source: imports.md
    icon: mdi-import
  #**************************************
  #               functions
  #**************************************
  dochub.dsl.functions:
    location: /DocHub/DSL/functions
    title: fuctions
    description: Пользовательские функции
    type: markdown
    source: functions.md
    icon: mdi-function
  #****************************************
  #         Примеры функций
  #****************************************
functions:
  demo_summ:
    title: Простой пример сложения массива
    # Входящие параметры
    params:
      # Для каждого параметра описывается JSONSchema
      - alias: items    # Если задан alias, в функции будет доступна переменная с этим идентификатором
        type: array     # Требуем на вход массив
        items:
          type: number  # Элементы массива должны быть числами
        minItems: 1     # Минимум должен быть 1 элемент массива
        title: Объект конвертации
        required: true  # Признак обязательности параметра функции
    # JSONSchema схема результата. Не обязательно.
    result:
      type: number
    # Код функции
    code: >
      (
        /* В items будет передан массив значений для суммирования */
        /* Для реализации функции используется встроенная функция JSONata $sum() */
        $sum(items)
      )

  #****************************************
  #         Примеры datasets
  #****************************************
datasets:                       
  dochub.dsl.datasets.example.preset:   
    # Константно определяются уровни критичности
    source:                             
      - id: k1
        title: Уровень K1
      - id: k2
        title: Уровень K2
      - id: k3
        title: Уровень K3
      - id: k4
        title: Уровень K4
  dochub.dsl.datasets.example.query:
    # JSONata запрос к архитектуре
    source: >                   
      (
        [components.$spread().{
            "id": $keys()[0],
            "title": *.title,
            "link": "@component/" & $keys()[0]
        }[$substring(id, 0, 7)="dochub."]^(title)]
      )
  dochub.dsl.datasets.example.dependence:         
    # Выбирает только L1 для архитектурных компонентов DocHub
    origin: dochub.components   # Базовый источник данных
    source: >                   # JSONata запрос к архитектуре
      ($[$count($split(id, "."))=2])
        